[{"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\index.js":"1","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\App.js":"2","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Header.js":"3","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Table.js":"4","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Context.js":"5","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Posts.js":"6","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\PostForm.js":"7","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Album.js":"8","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\ImgGallery.js":"9"},{"size":238,"mtime":1612381302872,"results":"10","hashOfConfig":"11"},{"size":730,"mtime":1612445219181,"results":"12","hashOfConfig":"11"},{"size":732,"mtime":1612688849444,"results":"13","hashOfConfig":"11"},{"size":6775,"mtime":1612689409694,"results":"14","hashOfConfig":"11"},{"size":1257,"mtime":1612688838091,"results":"15","hashOfConfig":"11"},{"size":2295,"mtime":1612689254868,"results":"16","hashOfConfig":"11"},{"size":2940,"mtime":1612689190172,"results":"17","hashOfConfig":"11"},{"size":2069,"mtime":1612689122215,"results":"18","hashOfConfig":"11"},{"size":1867,"mtime":1612689149330,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mnxwfm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\index.js",[],["43","44"],"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\App.js",[],"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Header.js",[],"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Table.js",["45"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Box, Collapse, IconButton, Table, Button, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Paper} from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport {Context} from './Context';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n  table: {\r\n    marginTop: 70,\r\n    backgroundColor: '#F1F1F1'\r\n  },\r\n  tableHeader: {\r\n    backgroundColor: '#96A363'\r\n  },\r\n  moreHeader: {\r\n    backgroundColor: '#DAE1D9'\r\n  },\r\n  buttons: {\r\n    width: '20%',\r\n    margin: 20,\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly'\r\n  }\r\n});\r\n\r\nconst ThirdTable = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [getState, setState] = useContext(Context);\r\n\r\n  const classes = useRowStyles();\r\n  const {user} = props;\r\n\r\n  const showPosts = (id) => {\r\n    if (getState.postId === id) {\r\n      setState({\r\n        ...getState,\r\n        isPost: true,\r\n        postId: id,\r\n        isPostForm: false,\r\n        isAlbums: false,\r\n        isSlider: false\r\n      })\r\n    } else {\r\n      setState({\r\n        ...getState,\r\n        isPost: true,\r\n        postId: id,\r\n        isPostForm: false,\r\n        isAlbums: false,\r\n        isSlider: false\r\n      })\r\n    }\r\n  }\r\n\r\n  const showAlbum = (id) => {\r\n    if (getState.albumId === id) {\r\n      setState({\r\n        ...getState,\r\n        isAlbums: true,\r\n        albumId: id,\r\n        isPost: false,\r\n        isSlider: false,\r\n        isPostForm: false\r\n      })\r\n    } else {\r\n      setState({\r\n        ...getState,\r\n        isAlbums: true,\r\n        albumId: id,\r\n        isPost: false,\r\n        isSlider: false,\r\n        isPostForm: false\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {user.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{user.username}</TableCell>\r\n        <TableCell align=\"right\">{user.email}</TableCell>\r\n        <TableCell align=\"right\">{user.phone}</TableCell>\r\n        <TableCell align=\"right\">{user.website}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\" className={classes.moreHeader}>\r\n                Adress\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Street</TableCell>\r\n                    <TableCell>Suite</TableCell>\r\n                    <TableCell align=\"right\">City</TableCell>\r\n                    <TableCell align=\"right\">Zipcode</TableCell>\r\n                    <TableCell align=\"right\">Geo</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                <TableRow key={user.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {user.address.street}\r\n                      </TableCell>\r\n                      <TableCell>{user.address.suite}</TableCell>\r\n                      <TableCell align=\"right\">{user.address.city}</TableCell>\r\n                      <TableCell align=\"right\">{user.address.zipcode}</TableCell>\r\n                      <TableCell align=\"right\">{user.address.geo.lat}/{user.address.geo.lng}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\" className={classes.moreHeader}>\r\n                Company\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>CatchPhrase</TableCell>\r\n                    <TableCell align=\"right\">Bs</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                <TableRow key={user.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {user.company.name}\r\n                      </TableCell>\r\n                      <TableCell>{user.company.catchPhrase}</TableCell>\r\n                      <TableCell align=\"right\">{user.company.bs}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n            <Box className={classes.buttons}>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => showPosts(user.id)}>Posts</Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => showAlbum(user.id)}>Album</Button>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n const UserTable = () => {\r\n    const classes = useRowStyles();\r\n    const [getState, setState] = useContext(Context);\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const data = await Axios.get('https://jsonplaceholder.typicode.com/users');\r\n            setState({\r\n                ...getState,\r\n                users: data.data\r\n            })\r\n        } catch (error) {\r\n            console.log('here is error')\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" className={classes.table}>\r\n        <TableHead className={classes.tableHeader}>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Name</TableCell>\r\n            <TableCell align=\"right\">Username</TableCell>\r\n            <TableCell align=\"right\">E-mail</TableCell>\r\n            <TableCell align=\"right\">Phone</TableCell>\r\n            <TableCell align=\"right\">Website</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {getState.users.map((user) => (\r\n            <ThirdTable key={user.id} user={user} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default UserTable;","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Context.js",[],"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Posts.js",["46","47"],"import React, {useContext, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Card, CardContent, Button, Typography} from '@material-ui/core';\r\n\r\nimport {Context} from './Context';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: '#F1E3A7',\r\n    margin: 20\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  h2Header: {\r\n    textAlign: 'center',\r\n    fontSize: 34,\r\n    color: '#5B7984'\r\n  },\r\n  button: {\r\n    marginLeft: 20,\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const [getState, setState] = useContext(Context); \r\n\r\n  const getPosts = async () => {\r\n    try {\r\n        const data = await Axios.get('https://jsonplaceholder.typicode.com/posts');\r\n        if (getState.posts.length === 0){\r\n          setState({\r\n            ...getState,\r\n            posts: data.data\r\n        })\r\n        }\r\n    } catch (error) {\r\n        console.log('here is error')\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    getPosts();\r\n}, []);\r\n\r\nuseEffect(()=>{\r\n  localStorage.setItem('state', JSON.stringify(getState))\r\n}, [getState])\r\n\r\nconst addPostForm = () => {\r\n    setState({\r\n      ...getState,\r\n      isPostForm: !getState.isPostForm\r\n    })\r\n}\r\n\r\nreturn (\r\n    <>\r\n    <h2 className={classes.h2Header}>Posts</h2>\r\n    {\r\n       getState.posts.map(post => {\r\n            if (post.userId === getState.postId) {\r\n                return (\r\n                    <Card className={classes.root} key={post.id}>\r\n                    <CardContent>\r\n                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {post.title}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h2\">\r\n                        {post.body}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={addPostForm}>Add new post</Button>\r\n    </>\r\n)\r\n\r\n}\r\n","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\PostForm.js",[],"C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\Album.js",["48","49"],"import React, {useContext, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Card, CardContent, Button, Typography} from '@material-ui/core';\r\n\r\nimport {Context} from './Context';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n      width: '30%',\r\n    minWidth: 275,\r\n    backgroundColor: '#CCDBAE',\r\n    margin: 20\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  h2Header: {\r\n    textAlign: 'center',\r\n    fontSize: 34,\r\n    color: '#5B7984'\r\n  },\r\n  card: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n  },\r\n  button: {\r\n      height: 60\r\n  }\r\n});\r\n\r\nexport default function Albums() {\r\n  const classes = useStyles();\r\n  const [getState, setState] = useContext(Context);\r\n\r\n  const getAlbums = async () => {\r\n    try {\r\n      const data = await Axios.get('https://jsonplaceholder.typicode.com/albums');\r\n      setState({\r\n          ...getState,\r\n          albums: data.data\r\n      })\r\n    } catch (error) {\r\n        console.log('here is error')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAlbums();\r\n  }, []);\r\n\r\n  const openAlbum = (id) => {\r\n    setState({\r\n      ...getState,\r\n      isSlider: true,\r\n      sliderId: id,\r\n      isAlbums: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <h2 className={classes.h2Header}>Albums</h2>\r\n    {\r\n        getState.albums.map(album => {\r\n            if (album.userId === getState.albumId) {\r\n                return (\r\n                    <div className={classes.card} key={album.id}>\r\n                    <Card className={classes.root}>\r\n                    <CardContent>\r\n                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {album.title}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={() => openAlbum(album.id)}>Open album</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    </>\r\n  );\r\n}","C:\\Users\\Nailya\\Desktop\\tattelecom-react-app\\src\\components\\ImgGallery.js",["50","51"],"import React, {useContext, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Gallery from 'react-photo-gallery';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport {Context} from './Context';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center', \r\n        backgroundColor: 'red'\r\n    },\r\n    button: {\r\n        margin: 20\r\n    },\r\n    h2Header: {\r\n        textAlign: 'center',\r\n        fontSize: 34,\r\n        color: '#5B7984'\r\n      }\r\n});\r\n\r\nconst ImgGallery = () => {\r\n    const classes = useStyles();\r\n    const [getState, setState] = useContext(Context);\r\n\r\n    const getImages = async () => {\r\n        try {\r\n            const data = await Axios.get('https://jsonplaceholder.typicode.com/photos');\r\n            setState({\r\n                ...getState,\r\n                slideImages: data.data\r\n            })\r\n        } catch (error) {\r\n            console.log('here is error')\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getImages();\r\n    }, []);\r\n\r\n    const closeAlbum = () => {\r\n        setState({\r\n            ...getState,\r\n            isSlider: false,\r\n            sliderId: '',\r\n            isAlbums: true\r\n        })\r\n    }\r\n\r\n    let photos = [];\r\n\r\n    getState.slideImages.map(image => {\r\n        if (image.albumId === getState.sliderId) {\r\n            photos = [...photos, {\r\n                src: image.thumbnailUrl,\r\n                width: 150,\r\n                height: 150\r\n            }]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <h2 className={classes.h2Header}>Gallery</h2>\r\n        <Button variant=\"outlined\" color=\"secondary\" className={classes.button} onClick={() => closeAlbum()}>Close album</Button>\r\n        <Gallery photos={photos}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgGallery;\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":183,"column":8,"nodeType":"58","endLine":183,"endColumn":10,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":59,"column":4,"nodeType":"58","endLine":59,"endColumn":6,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":76,"column":32,"nodeType":"64","messageId":"65","endLine":76,"endColumn":34},{"ruleId":"56","severity":1,"message":"66","line":50,"column":6,"nodeType":"58","endLine":50,"endColumn":8,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"63","line":65,"column":35,"nodeType":"64","messageId":"65","endLine":65,"endColumn":37},{"ruleId":"56","severity":1,"message":"68","line":43,"column":8,"nodeType":"58","endLine":43,"endColumn":10,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":56,"column":36,"nodeType":"64","messageId":"71","endLine":56,"endColumn":38},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["75"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getAlbums'. Either include it or remove the dependency array.",["76"],"React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["77"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [getUsers]",{"range":"86","text":"87"},"Update the dependencies array to be: [getPosts]",{"range":"88","text":"89"},"Update the dependencies array to be: [getAlbums]",{"range":"90","text":"91"},"Update the dependencies array to be: [getImages]",{"range":"92","text":"93"},[5995,5997],"[getUsers]",[1222,1224],"[getPosts]",[1080,1082],"[getAlbums]",[1084,1086],"[getImages]"]